init {
    $total = (0)
    $testInput = (
        1abc2,
        pqr3stu8vwx,
        a1b2c3d4e5f,
        treb7uchet
    )
    $utils = $lib.import(aoc.utils)
}

function getFirstDigit(input){
    $text = $input.strip()
    $fd = $lib.regex.search("(\d{1})", $text)
    return($fd.0)
}

function getLastDigit(input){
    $text = $input.strip().reverse()
    $ld = $lib.regex.search("(\d{1})", $text)
    return($ld.0)
}
function solve(test=$lib.false, sha256=""){
    if $test {
        for $i in $testInput {
            $calib = $lib.str.concat($getFirstDigit($i), $getLastDigit($i))
            $val = $lib.cast(int, $calib)
            $total = ($total + $val)
        }
    }
    if $sha256 {
        for $i in $utils.getInputDataFromFile($sha256) {
            $calib = $lib.str.concat($getFirstDigit($i), $getLastDigit($i))
            $val = $lib.cast(int, $calib)
            $total = ($total + $val)
        }
    }

    fini {$lib.print(`solution: {$total}`)}
}

